module MainHelper
	def gettitle(params)
		return "<h3>Joe Guy's 2007 National Football League Season</h3>" if params[:id].to_i == 0 and params[:league].to_i == 1
		return "<h3>Joe Guy's 2008 National Football League Season</h3>" if params[:id].to_i == 1 and params[:league].to_i == 1
		return "<h3>Joe Guy's 2008 National Basketball Association Season</h3>" if params[:league].to_i == 2 and params[:id].to_i == 1
		return "<h3>..Joe Guy's 2007 National Basketball Association Season</h3>" if params[:league].to_i == 2 and params[:id].to_i == 0
		return "<h3>Joe Guy's 2008 NCAA Football League Season</h3>" if params[:league].to_i == 4 and params[:id].to_i == 2
		return "<h3>Joe Guy's 2007 NCAA Football League Season</h3>" if params[:league].to_i == 4 and params[:id].to_i == 1
		return "<h3>Joe Guy's 2008 NCAA Basketball Season</h3>" if params[:league].to_i == 5 and params[:id].to_i == 2
		return "<h3>Joe Guy's 2007 NCAA Basketball Season</h3>" if params[:league].to_i == 5 and params[:id].to_i == 1
		raise "params.inspect #{params.inspect}"
	end
	
	def mlhlpr(p)
		# process moneyline
		return ["No Moneyline", 0.0, nil, 0.0, 0.0, 0.0, false] if p.moneyline_home == -110 and p.moneyline_away == -110 or (p.moneyline_home == 0 or p.moneyline_away == 0)
		hml = nil
		hml = p.moneyline_home/100.0 if p.moneyline_home > 0
		hml = -100.0/p.moneyline_home if p.moneyline_home < 0
		raise "hml problem p is #{p.inspect}" if hml.nil?
		aml = nil
		aml = p.moneyline_away/100.0 if p.moneyline_away > 0
		aml = -100.0/p.moneyline_away if p.moneyline_away < 0
		# raise "aml problem" if aml.nil?
		aml = 0.0 if aml.nil?
		pickhome = nil
		pickaway = nil
		homepo   = p.prob_home_win_su # *hml
		awaypo    = p.prob_away_win_su # *aml
		raise "homepo is nil" if homepo.nil?
		raise "awaypo is nil" if awaypo.nil?
#		return ["<div id='yellow'>No Opinon </div>", 0.0]  if homepo<1.0 and awaypo<1.0
		pickhome = (homepo > awaypo) unless p.league == 5
		pickaway = (awaypo > homepo) unless p.league == 5
		pickhome = (homepo > 0.92) # if p.league > 3
		pickaway = (awaypo > 0.92) # if p.league > 3
		pickhome = (homepo > 0.85) if p.league  == 2
		pickaway = (awaypo > 0.85)  if p.league == 2
#		return ["<div id='yellow'>No Opinon </div>", 0.0]  if (pickhome and hml<1.0) or (pickaway and aml<1.0)
		raise "???" if pickhome.nil? or pickaway.nil?
		hlose	 = nil
		alose		 = nil
		hbbmlwin	 = nil
		hbbmllose = nil
		abbmlwin  = nil
		abbmllose  = nil
		if p.moneyline_home > 0
			hbbmlwin = p.moneyline_home
			hbbmllose = -100.0
			hwinprize = p.moneyline_home / 100.0
			hlose         = -1
		else
			hbbmlwin = 100.0
			hbbmllose = p.moneyline_home
			hwinprize = -100.0/p.moneyline_home #+1.0
			hlose         = -1
		end
		if p.moneyline_away > 0
			abbmlwin = p.moneyline_away
			abbmllose = -100.0
			awinprize = p.moneyline_away / 100.0
			alose         = -1
		else
			abbmlwin = 100.0
			abbmllose = p.moneyline_away
			awinprize = -100.00/p.moneyline_away #+1.0
			alose         = -1
		end
		# experimental hedge factor
#		hhf = p.prob_home_win_ats * (awinprize-1.0) / (awinprize*())
		hhf = 1.0
#		ahf = 1.0 - hhf

#		hhf = p.prob_home_win_ats * ()
		hhf = (1.0-2.0*p.prob_away_win_su) / (p.prob_away_win_su*(awinprize-1)+31.0/11.0*p.prob_home_win_su)
		ahf = (1.0-2.0*p.prob_home_win_su) / (p.prob_home_win_su*(hwinprize-1)+31.0/11.0*p.prob_away_win_su)
		# ahf = 1.0 / hhf
		puts "hhf #{hhf} ahf #{ahf} "
		bh = nil
		if hhf >= 0.0 and hhf <= 1.0
			ahf = 1.0-hhf
			bh = true
		else
			hhf = 1.0-ahf
			bh = false
		end
		puts " after hhf #{hhf} ahf #{ahf} "
		raise "hlose is nil " if hlose.nil?
		raise "alose is nil" if alose.nil?
		mlats = nil
		raise "hbbmlwin is nil" if hbbmlwin.nil?
	    	raise "hbbmllose is nil" if hbbmllose.nil?
		raise "abbmlwin is nil" if abbmlwin.nil?
	    	raise "abbmllose is nil" if abbmllose.nil?
		mlats = ((pickhome and p.spread > 0.0) ? p.home_team_id : ((pickaway and p.spread < 0.0) ? p.away_team_id : nil))
#		puts "mlats.inspect #{mlats.inspect}"
		raise "mlats is zero #{p.inspect}" if mlats == 0
		return ["<div id='yellow'>No Opinon </div>", 0.0, nil, 0.0, 0.0, 0.0, false]  if pickhome == false and pickaway == false
		return ["<div id='green'> #{nameconv(Team.find(p.home_team_id).name, p.league)} -> #{(hwinprize).to_s[0,6]}</div>", hwinprize, mlats, hbbmlwin, hhf, ahf, bh] if pickhome and p.actual_home_score > p.actual_away_score
		return ["<div id='red'> #{nameconv(Team.find(p.home_team_id).name, p.league)} -> #{hlose.to_s[0,6]}</div>", hlose, mlats, hbbmllose, hhf, ahf, bh] if pickhome and p.actual_home_score < p.actual_away_score
		return ["<div id='yellow'> #{nameconv(Team.find(p.home_team_id).name, p.league)} -> 0.0</div>", 0.0, mlats, 0.0, 0.0, 0.0, false] if pickhome and p.actual_home_score == p.actual_away_score

		return ["<div id='green'> #{nameconv(Team.find(p.away_team_id).name, p.league)} -> #{(awinprize).to_s[0,6]}</div>", awinprize, mlats, abbmlwin, hhf, ahf, bh] if pickaway and p.actual_away_score > p.actual_home_score
		return ["<div id='red'> #{nameconv(Team.find(p.away_team_id).name, p.league)} -> #{alose.to_s[0,6]}</div>", alose, mlats, abbmllose, hhf, ahf, bh] if pickaway and p.actual_away_score < p.actual_home_score
		return ["<div id='yellow'> #{nameconv(Team.find(p.away_team_id).name, p.league)} -> 0.0</div>", 0.0, mlats, 0.0, 0.0, 0.0, false] if pickaway and p.actual_away_score == p.actual_home_score
		raise "why am i here"
	end
	
	def chargeshash(shash, weeklyinvestment, wins, losses, pushes, weeklywinmatrix, totalwinmatrix, suww, sulw, supw, suwy, suly, supy, weeklyprofit, tthash, mlhash, ww, lw) 
            shash["Weekly Investment"] = weeklyinvestment
            shash["Wins"]              = wins
            shash["Losses"]            = losses
            shash["Pushes"]            = pushes
            shash["Weekly Wins"]       = weeklywinmatrix[1][0]
            shash["Weekly Pushes"]     = weeklywinmatrix[1][1]
	    shash["Weekly Losses"]     = weeklywinmatrix[1][2]
	    shash["Weekly Wins"]		= 0.0 unless shash["Weekly Wins"].kind_of? Float
	    shash["Weekly Pushes"]	= 0.0 unless shash["Weekly Pushes"].kind_of? Float
	    shash["Weekly Losses"]	= 0.0 unless shash["Weekly Losses"].kind_of? Float
	    shash["Weekly Wins"]		= 0.0 if shash["Weekly Wins"].nan?
	    shash["Weekly Pushes"]	= 0.0 if shash["Weekly Pushes"].nan?
	    shash["Weekly Losses"]	= 0.0 if shash["Weekly Losses"].nan?
            shash["Total Wins"]	= totalwinmatrix[1][0] 
            shash["Total Pushes"]	= totalwinmatrix[1][1] 
            shash["Total Losses"]	= totalwinmatrix[1][2] 
            ww += 1 if shash["Weekly Wins"] > (shash["Weekly Losses"] * 1.1)
            lw += 1 if (shash["Weekly Losses"] * 1.1) > shash["Weekly Wins"]
            shash["SU Weekly Wins"]    = suww
            shash["SU Weekly Losses"]  = sulw
            shash["SU Weekly Pushes"]  = supw
            shash["SU Total Wins"]     = suwy
            shash["SU Total Losses"]   = suly
            shash["SU Total Pushes"]   = supy
            shash["Weekly Profit"]     = weeklyprofit
            shash["TT Bets"]           = tthash["bets"]   
            shash["TT Wins"]           = tthash["wins"]   
            shash["TT Losses"]         = tthash["losses"] 
            shash["TT Pushes"]         = tthash["pushes"]
            shash["Weekly TT Bets"]    = tthash["Weekly TT Bets"]
            shash["Weekly TT Wins"]    = tthash["Weekly TT Wins"]
            shash["Weekly TT Losses"]  = tthash["Weekly TT Losses"]
            shash["Weekly TT Pushes"]  = tthash["Weekly TT Pushes"]
	    shash["ml bets"]  = mlhash["ml bets"] 
	    shash["ml wins"]  = mlhash["ml wins"] 
	    shash["ml losses"]  = mlhash["ml losses"] 
	    shash["ml pushes"]  = mlhash["ml pushes"] 
	    shash["ml prize"]  = mlhash["ml prize"] 
	    shash["weekly ml bets"]     = mlhash["weekly ml bets"] 
	    shash["weekly ml wins"]     = mlhash["weekly ml wins"] 
	    shash["weekly ml losses"]   = mlhash["weekly ml losses"]  
	    shash["weekly ml pushes"] = mlhash["weekly ml pushes"] 
	    shash["weekly ml prize"] = mlhash["weekly ml prize"] 
            shash["Winning Weeks"]    = ww
            shash["Losing Weeks"]     = lw
	    return [shash, ww, lw]
	end
	def nflinit(leagueid)
		mlfullbet = 0.0
		brmlats = 1000
		betprob = []
		mlats   = 0.0
		mlsum = 0.0
		winprob  = 11.0/21.0
		weeklywinmatrix    = [[0, 0, 0],[0, 0, 0]]
		totalwinmatrix     = [[0, 0, 0],[0, 0, 0]]
		suww = sulw = supw = 0
		suwy = suly = supy = 0
		weeklyprofit            = 0
		isadmin            = false
		mlhash             = {}
		mlhash["ml bets"]     = 0
		mlhash["ml wins"]     = 0
		mlhash["ml losses"]   = 0
		mlhash["ml pushes"]   = 0
		mlhash["ml prize"]  = 0.0
		mlhash["weekly ml bets"]     = 0
		mlhash["weekly ml wins"]     = 0
		mlhash["weekly ml losses"]   = 0
		mlhash["weekly ml pushes"]   = 0
		mlhash["weekly ml prize"]   = 0.0
		tthash	=	{}
		tthash["bets"]     = 0
		tthash["wins"]     = 0
		tthash["losses"]   = 0
		tthash["pushes"]   = 0
		tthash["Weekly TT Bets"]   = 0
		tthash["Weekly TT Wins"]   = 0
		tthash["Weekly TT Losses"] = 0
		tthash["Weekly TT Pushes"] = 0
		wageramount	=	20
		ttwageramount	=	40 
		topten	=	0.75
		topten	=	0.9 if params[:id].to_i == 1
		winprob	=	0.9 if	leagueid	<=	2
		return mlfullbet, brmlats, betprob, mlats, mlsum, winprob, weeklywinmatrix, totalwinmatrix, suww, sulw, supw, suwy, suly, supy, weeklyprofit, isadmin, mlhash, tthash, wageramount, ttwageramount,  topten	
	end
	def  weeklyinit(p, wins, loses, pushes, weeklywinmatrix, weeklyinvestment, suww, sulw, supw, weekv, weeklyprofit, tthash, mlhash)
           wins = losses = pushes = 0 
           weeklywinmatrix    = [[0, 0, 0],[0, 0, 0]]
           weeklyinvestment   = 0 
           suww = sulw = supw = 0 
           weekv              = p.week 
           weeklyprofit       = 0 
           tthash["Weekly TT Bets"]   = 0 
           tthash["Weekly TT Wins"]   = 0 
           tthash["Weekly TT Losses"] = 0 
           tthash["Weekly TT Pushes"] = 0 
           mlhash["weekly ml bets"]     = 0 
           mlhash["weekly ml wins"]     = 0 
           mlhash["weekly ml losses"]   = 0 
           mlhash["weekly ml pushes"]   = 0 
           mlhash["weekly ml prize"]   = 0.0
	   return wins, loses, pushes, weeklywinmatrix, weeklyinvestment, suww, sulw, supw, weekv, weeklyprofit, tthash, mlhash
    end
end
